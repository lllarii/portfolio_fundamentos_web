* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  text-decoration: none;
  outline: none;
  font-weight: 400;
  font-family: sans-serif;
}


/* Para criarmos todas as variáveis com escopo global, declaramos todas elas dentro do seletor :root. O seletor :root corresponde ao elemento raiz do documento. */
:root {
  --cambridge-blue: #84a98cff;
  --black: #000000ff;
  --old-rose: #cb8589ff;
  --lavender-web: #eeeeffff;
  --hookers-green: #52796f;

  --ash-gray: #b1b6a6ff;
  --pearl: #eae0ccff;

}

html {
  width: 100%;
  height: 100vh;
}

body {
  background: var(--ash-gray);
  color: var(--black);
}

h1 {
  color: var(--lavender-web);
  font-size: 2rem;
  font-weight: 700;
}

h2 {
  padding: 1rem;
  color: var(--black);
  font-size: 1.5rem;
  font-weight: 600;
  text-align: left;
}

h3 {
  padding: 1rem;
  color: var(--black);
  font-size: 1.25rem;
  font-weight: 700;
  text-align: center;
}

p {
  font-size: 1rem;
  line-height: 1.5rem;
  text-align: justify;
  padding: 0.5rem 0;
}

/* Definindo as configurações das classes de elemento Flexbox */
.flex {
  display: flex;
  justify-content: center;
  align-items: center;
}

.flex_start {
  display: flex;
  justify-content: flex-start;
}

#header_content {
  height: 80px;
  position: sticky;
  /*opção sticky, que cria o efeito do conteúdo da página passando por baixo da Seção Header ao rolar página. */
  top: 0;
  width: 100%;
  justify-content: space-between;
  padding: 24px;
  background-color: var(--hookers-green);
  border-bottom: var(--cambridge-blue);
}

#menu li {
  display: inline;
  padding: 1rem;
}

#menu li a {
  text-decoration: none;
  color: var(--lavender-web);
  font-size: 20px;
}

#menu li a:hover {
  color: var(--old-rose);
  text-decoration: underline;
}

#about {
  flex-direction: column;
  margin: 2rem auto;
  width: 90%;
}

#conteudo {
  flex-direction: row;
  gap: 2rem;
}

.img_profile {
  width: 200px;
  border-radius: 50%;
  border-style: double;
  border-color: var(--pearl);
  border-width: thick;
}

#video {
  flex-direction: column;
  margin: 2rem auto;
  width: 90%;
}

#video h2 {
  text-align: center;
}

#youtube {
  width: 60vw;
  margin: 0 auto;
}

#youtube .youtube-video {
  width: 100%;
  aspect-ratio: 16/9;
  border: 5px double;
  border-style: double;
  border-color: var(--pearl);
  padding: 0px;

}

footer {
  flex-direction: column;
  margin: 0;
  padding: 2rem;
  color: var(--lavender-web);
  background-color: var(--cambridge-blue);
  font-weight: bold;
  text-align: center;

}

#redes_sociais {
  display: flex;
  justify-content: space-evenly;
  margin: 1rem 0 0 0;
  width: 320px;
}

.social_icon {
  width: 4rem;
  height: 4rem;
}

.social_icon:hover {
  filter: brightness(0) saturate(100%) invert(42%) sepia(34%) saturate(288%) hue-rotate(115deg) brightness(97%) contrast(95%);
}

/*Estilização da Página de Contato*/

#contact {
  flex-direction: row;
  gap: 2rem;
}

form {
  display: flex;
  flex-direction: column;
  width: 480px;
  margin: 2rem 0;
  padding: 1.5rem;
  border: none;
}

form label {
  font-size: 1rem;
  text-align: left;
  font-weight: 500;
}

form input,
textarea {
  margin: 0.5rem 0 1rem;
  padding: 0.5rem;
  border-radius: 1.25rem;
  border: none;
  width: 100%;
  font-size: 1rem;
}

textarea {
  resize: none;
  height: 5rem;
}

form span {
  margin: 0 0 0.5rem 0.75rem;
  font-size: 0.75rem;
  line-height: 1rem;
  color: red;
}

form button {
  text-align: center;
  padding: 0.75rem 2rem;
  background: var(--hookers-green);
  border: 1px solid var(--cambridge-blue);
  color: var(--lavender-web);
  border-radius: 0.75rem;
  font-weight: 700;
  font-size: 1rem;
}

form button:hover {
  background: var(--cambridge-blue);
}

#mapa {
  width: 480px;
  flex-direction: column;
  gap: 3rem;
}

#endereco>p {
  font-size: 1rem;
  text-align: justify;
  font-weight: 600;
  line-height: 10px;
}

/*estilização da página de projetos */

#projetosmain{
  min-height: 65vh; /*delimita altura mínima, não trava com '=' */
}

.titulo1 {
  padding: 0rem 1rem;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.titulo1>a {
  text-align: initial;
  margin-bottom: 2rem;
  display: block;
  padding-left: 1rem;
  color: var(--hookers-green);
  font-weight: 700;
}

.titulo1>a:hover {
  color: var(--old-rose);
  text-decoration: underline;
}

.titulo1>h2 {
  text-align: left;
  padding-bottom: 0.5rem;
}

.videotexto {
  display: flex;
  flex-direction: row;
  gap: 2rem;
  padding: 0rem 1rem;
  align-items: center;

  margin: 2rem auto;
  width: 90%;
  border-color: var(--old-rose);
  border-style: dashed;
  border-radius: 20px;
}

.videotexto .video1 {
    width: 50%;
    aspect-ratio: 16/9;
    padding: 10px 1px;
    border-radius: 25px;
}

.img_post{
  padding: 10px 1px;
  border-radius: 25px;
}

#barralateral {
  display:inline-block;
  position:sticky;
  left: 0;
  top: 20px;
  background-color: var(--cambridge-blue);
  width: 120%;
  height: 100%;
  margin: 10% 0 10%;
  border-radius: 10px;
  box-shadow: 2px 8px 30px var(--hookers-green);

  align-self:normal;

  padding: 1rem;
  padding-left: 0.5rem;
}

#barralateral h4 {
  font-size: 1.4rem;
  font-weight: 600;
  color: #243631;
  padding-bottom: 20px;
  text-align: center;
}

#barralateral ul {
  list-style-type:none;
  justify-content: end;
}

#barralateral ul li {
  margin-bottom: 20px;
}


#barralateral ul li a {
  text-decoration: none;
  color: var(--pearl);
  font-weight: 500;
}

#barralateral ul li a:hover {
  color: var(--hookers-green);
  text-decoration: underline;
  font-weight: 600;
}

/*responsividade */

/* @mediaa para css identificar o dispositivo que está carregando conteúdo */

/* @media screen and (max-width: 1000px) {
  body {
    background-color: var(--black);
  }
}
@media speech pra leitor de tela
se vai usar so tamanho nao precisa do screen, ja representa tudo */

/* aqui, numa tela com até 1000px, faz tal coisa */
/*estrutura é essa, agr tem que mudar as coisas certas pra ficar responsivo; disposição de elementos, tamanho e tal */